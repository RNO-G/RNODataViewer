import dash_html_components as html
import os
import dash
import dash_core_components as dcc
from dash.dependencies import Input, Output, State
#from RNODataViewer.base.app import app
from NuRadioReco.eventbrowser.app import app
import webbrowser
import RNODataViewer.base.data_provider_root
import RNODataViewer.base.data_provider_nur
import RNODataViewer.file_list.file_list
import RNODataViewer.station_selection.station_selection
import RNODataViewer.spectrogram.spectrogram
import RNODataViewer.noise_rms.noise_rms
#import RNODataViewer.trigger_rate.trigger_rate_uproot
from file_list.run_stats import DATA_DIR, RunStats

RNODataViewer.base.data_provider_root.RNODataProviderRoot().set_filenames("/Users/shallmann/Desktop/rnog_field_data/station22/run234/combined.root")

##app.title = 'RNO Data Browser'
run_viewer_layout = html.Div([
    html.Div([
        dcc.Dropdown(id='filename_run_viewer',
            options=[],
            multi=True,
            className='custom-dropdown', style={"width":"40%"}),
        html.Div([
            html.Button('open file', id='btn-open-file', className='btn btn-default')
            ], className='input-group-btn'),
            ], className='input-group', style={"width":"50%"}),
    RNODataViewer.station_selection.station_selection.layout_run_browser,
    html.Div([
        html.Div([
            html.Div([
                RNODataViewer.file_list.file_list.layout
            ], className='blocki-box')
        ], className='flexi-element-1'),
        html.Div([
            RNODataViewer.noise_rms.noise_rms.layout
        ], className='flexi-element-4')

    ], className='flexi-box'),
    html.Div([
        html.Div([
            RNODataViewer.spectrogram.spectrogram.layout
        ], className='flexi-element-1')
    ], className='flexi-box'),
    #html.Div([
    #    html.Div([
    #        RNODataViewer.trigger_rate.trigger_rate_uproot.layout
    #    ], className='flexi-element-1')
    #], className='flexi-box')
])

@app.callback(Output('filename_run_viewer', 'options'),
                [Input('datafolder', 'value')])
def set_filename_dropdown(folder):
      #if parsed_args.rnog_file:
        rs = RunStats(folder)
        run_table = rs.get_table()
        filtered_names = list(run_table.filenames_root)
        rrr =  [{'label': "Station {}, Run {}".format(row.station, row.run), 'value': row.filenames_root} for index, row in run_table.iterrows()]
        return rrr
    #return [{'label': ll.split('/')[-1], 'value': ll} for ll in sorted(glob.glob(os.path.join(folder, '*.root*')))]
      #else:
    #    return [{'label': ll.split('/')[-1], 'value': ll} for ll in sorted(glob.glob(os.path.join(folder, '*.nur*')))]
